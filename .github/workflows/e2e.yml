name: E2E Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v2
      - run: |
          PROBE_VERSION="$(python setup.py --version)"
          echo "PROBE_VERSION=$PROBE_VERSION" >> $GITHUB_ENV
      - run: python setup.py sdist
      - run: cp dist/sourceplusplus-${{ env.PROBE_VERSION }}.tar.gz e2e && ls && pwd
      - run: cd e2e && docker-compose up -d
      - name: Docker IPs
        run: docker inspect --format='{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq)
      - name: Set E2E_APP_HOST
        run: E2E_APP_HOST=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aqf "name=e2e_e2e-test_1")) && echo "E2E_APP_HOST=$E2E_APP_HOST" >> $GITHUB_ENV
      - name: Set SPP_PLATFORM_HOST
        run: SPP_PLATFORM_HOST=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aqf "name=spp-platform")) && echo "SPP_PLATFORM_HOST=$SPP_PLATFORM_HOST" >> $GITHUB_ENV
      - name: Wait for platform
        run: until $(curl --insecure --output /dev/null --silent --fail https://localhost:5445/api/new-token?access_token=change-me); do printf '.'; sleep 5; done && SPP_JWT_TOKEN=$(curl --insecure https://localhost:5445/api/new-token?access_token=change-me) && echo "SPP_JWT_TOKEN=$SPP_JWT_TOKEN" >> $GITHUB_ENV
      - name: Wait for skywalking
        run: |
          until $(curl --header "Authorization: Bearer ${{ env.SPP_JWT_TOKEN }}" --insecure --output /dev/null --silent --fail https://localhost:5445/health); do printf '.'; sleep 5; done
      - run: curl -sS https://webinstall.dev/jq | bash

      - name: Verify probe connected
        run: |
          resp=$(curl --header "Authorization: Bearer ${{ env.SPP_JWT_TOKEN }}" --insecure https://localhost:5445/clients) && [[ $(echo $resp | jq -r ."probes"[0]."meta"."language") == "python" ]] && echo $resp || (echo $resp && exit 1)

      - name: Download & install spp-cli
        run: |
          curl -O -J -L https://github.com/sourceplusplus/interface-cli/releases/latest/download/spp-cli && chmod +x spp-cli && mv spp-cli /usr/local/bin/spp-cli

      - name: Live breakpoint (false condition)
        run: |
          spp-cli developer add-live-breakpoint -c 1==2 E2ETest.py 19
          resp=$(spp-cli developer get-live-instruments) && [[ $(echo $resp | jq -r .[0]."applied") == "true" ]] && echo $resp || (echo $resp && exit 1)
          curl ${{ env.E2E_APP_HOST }}:5000 && sleep 35s
          resp=$(spp-cli developer get-live-instruments) && [[ $(echo $resp | jq -r .[0]."meta"."hit_count") == "0" ]] && echo $resp || (echo $resp && exit 1)
          spp-cli developer clear-live-instruments

      - name: Live log (false condition)
        run: |
          spp-cli developer add-live-log -c 1==2 -l provider E2ETest.py 19 Hello {}
          resp=$(spp-cli developer get-live-instruments) && [[ $(echo $resp | jq -r .[0]."applied") == "true" ]] && echo $resp || (echo $resp && exit 1)
          curl ${{ env.E2E_APP_HOST }}:5000 && sleep 35s
          resp=$(spp-cli developer get-live-instruments) && [[ $(echo $resp | jq -r .[0]."meta"."hit_count") == "0" ]] && echo $resp || (echo $resp && exit 1)
          spp-cli developer clear-live-instruments

      - name: Live breakpoint (hit limit = 2)
        run: |
          spp-cli developer add-live-breakpoint -hitLimit 2 E2ETest.py 19
          resp=$(spp-cli developer get-live-instruments) && [[ $(echo $resp | jq -r .[0]."applied") == "true" ]] && echo $resp || (echo $resp && exit 1)
          resp=$(spp-cli developer get-live-instruments) && [[ $(echo $resp | jq -r .[0]."hitLimit") == "2" ]] && echo $resp || (echo $resp && exit 1)
          resp=$(spp-cli developer get-live-instruments) && [[ $(echo $resp | jq -r .[0]."meta"."hit_count") == "0" ]] && echo $resp || (echo $resp && exit 1)
          curl ${{ env.E2E_APP_HOST }}:5000 && sleep 35s
          resp=$(spp-cli developer get-live-instruments) && [[ $(echo $resp | jq -r .[0]."meta"."hit_count") == "1" ]] && echo $resp || (echo $resp && exit 1)
          curl ${{ env.E2E_APP_HOST }}:5000 && sleep 35s
          resp=$(spp-cli developer get-live-instruments) && [[ $resp == "[]" ]] && echo $resp || (echo $resp && exit 1)

      - name: Live log (hit limit = 2)
        run: |
          spp-cli developer add-live-log -hitLimit 2 -l provider E2ETest.py 19 Hello {}
          resp=$(spp-cli developer get-live-instruments) && [[ $(echo $resp | jq -r .[0]."applied") == "true" ]] && echo $resp || (echo $resp && exit 1)
          resp=$(spp-cli developer get-live-instruments) && [[ $(echo $resp | jq -r .[0]."hitLimit") == "2" ]] && echo $resp || (echo $resp && exit 1)
          resp=$(spp-cli developer get-live-instruments) && [[ $(echo $resp | jq -r .[0]."meta"."hit_count") == "0" ]] && echo $resp || (echo $resp && exit 1)
          curl ${{ env.E2E_APP_HOST }}:5000 && sleep 35s
          resp=$(spp-cli developer get-live-instruments) && [[ $(echo $resp | jq -r .[0]."meta"."hit_count") == "1" ]] && echo $resp || (echo $resp && exit 1)
          curl ${{ env.E2E_APP_HOST }}:5000 && sleep 35s
          resp=$(spp-cli developer get-live-instruments) && [[ $resp == "[]" ]] && echo $resp || (echo $resp && exit 1)

      - name: Docker logs
        run: cd e2e && docker-compose logs -t --tail="all"
        if: ${{ always() }}
